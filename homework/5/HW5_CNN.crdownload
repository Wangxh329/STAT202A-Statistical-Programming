{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "HW5_CNN.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python2",
      "display_name": "Python 2"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "metadata": {
        "id": "tJj2C9z4-3UY",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# STAT202A HW5 --- Convolutional Networks\n",
        "So far we have worked with fully-connected networks, using them to explore different optimization strategies and network architectures. Fully-connected networks are a good testbed for experimentation because they are very computationally efficient, but in practice all state-of-the-art results use convolutional networks instead.\n",
        "\n",
        "In this homework, your are required to implement convolution layer, forward and backward. All other part of the code are given. You will then use these layers to train a convolutional network on the CIFAR-10 dataset.\n",
        "\n",
        "Please following these steps,\n",
        "\n",
        "- STEP 1: Implement two function in second block, CNN forward and backward.\n",
        "- STEP 2: Read the code I provided, especially code in this pythonbook, the definition of CNN network in second block class. Add comments to codes in second blocks. (You can also read code provided in zip, but you do not need to make comment)\n",
        "- STEP 3: Run each block one by one see every thing works well.\n",
        "- STEP 4: Try to turn the learning rate and other setting to make final cifar learning well. Notice the cifar training use fast version CNN so this is not affected by your implementation. i.e. even you you fail to implement CNN layer, you can still it play it.\n",
        "- STEP 5: Doing more extra play at the end of this pythonbook. e.g. : Try to virtualize more filter / try to plot an accuracy according to different setting / calculate the accuracy by each class ... It is extra and optional.\n",
        "- STEP 6: Press Ctrl + P (or Commend + P) to print this page to pdf. Then download this ipynb files. \n",
        "- STEP 7: Submit the pdf and ipynb files only to ccle. (Two files, pdf and ipynb, no other filetype accepted)\n",
        "\n",
        "In order to useit in  google Colab, **remember to change Runtime -> change runtime type -> python version from python 3 to python 2**. Then run the first block, select the zip files I provided to upload and this block of code will automaticlly unzip it. Then, it will download cifar files and makefiles. \n",
        "\n",
        "If any problem caused later and crack the runtime. Remember to reset the runtime by Runtime -> Reset all runtimes and rerun the first block."
      ]
    },
    {
      "metadata": {
        "id": "LqQffH-R_0VL",
        "colab_type": "code",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 1109
        },
        "outputId": "b9c8d836-67c4-4b40-950c-f55bdd640d39"
      },
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()\n",
        "!unzip HW5_code\n",
        "!pip install Cython==0.21\n",
        "!python HW5_code/setup.py build_ext --inplace\n",
        "!mv im2col_cython.c HW5_code/im2col_cython.c\n",
        "!mv im2col_cython.so HW5_code/im2col_cython.so\n",
        "!mv im2col_cython.pyx HW5_code/im2col_cython.pyx\n",
        "!wget http://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n",
        "!tar -xzvf cifar-10-python.tar.gz\n",
        "!rm cifar-10-python.tar.gz "
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-9f0f871c-0c75-454a-8b36-9417fa26fbab\" name=\"files[]\" multiple disabled />\n",
              "     <output id=\"result-9f0f871c-0c75-454a-8b36-9417fa26fbab\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving HW5_code.zip to HW5_code.zip\n",
            "Archive:  HW5_code.zip\n",
            "   creating: HW5_code/\n",
            "  inflating: HW5_code/data_utils.py  \n",
            "  inflating: HW5_code/fast_layers.py  \n",
            "  inflating: HW5_code/gradient_check.py  \n",
            "  inflating: HW5_code/im2col.py      \n",
            "  inflating: HW5_code/layers.py      \n",
            "  inflating: HW5_code/layer_utils.py  \n",
            "  inflating: HW5_code/optim.py       \n",
            "  inflating: HW5_code/setup.py       \n",
            "  inflating: HW5_code/solver.py      \n",
            "  inflating: HW5_code/vis_utils.py   \n",
            " extracting: HW5_code/__init__.py    \n",
            "  inflating: im2col_cython.pyx       \n",
            "Collecting Cython==0.21\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/19/0a/49bbebfea1ee4e178cd86ace4b0bef365af9d87afd89bef0425ec761a162/Cython-0.21-cp27-cp27mu-manylinux1_x86_64.whl (5.3MB)\n",
            "\u001b[K    100% |████████████████████████████████| 5.3MB 5.6MB/s \n",
            "\u001b[?25hInstalling collected packages: Cython\n",
            "Successfully installed Cython-0.21\n",
            "Compiling im2col_cython.pyx because it changed.\n",
            "Cythonizing im2col_cython.pyx\n",
            "running build_ext\n",
            "building 'im2col_cython' extension\n",
            "creating build\n",
            "creating build/temp.linux-x86_64-2.7\n",
            "x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -Wdate-time -D_FORTIFY_SOURCE=2 -g -fdebug-prefix-map=/build/python2.7-nbjU53/python2.7-2.7.15~rc1=. -fstack-protector-strong -Wformat -Werror=format-security -fPIC -I/usr/local/lib/python2.7/dist-packages/numpy/core/include -I/usr/include/python2.7 -c im2col_cython.c -o build/temp.linux-x86_64-2.7/im2col_cython.o\n",
            "In file included from \u001b[01m\u001b[K/usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/ndarraytypes.h:1816:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K/usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/ndarrayobject.h:18\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K/usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/arrayobject.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kim2col_cython.c:232\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:15:2:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K#warning \"Using deprecated NumPy API, disable it by \" \"#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION\" [\u001b[01;35m\u001b[K-Wcpp\u001b[m\u001b[K]\n",
            " #\u001b[01;35m\u001b[Kwarning\u001b[m\u001b[K \"Using deprecated NumPy API, disable it by \" \\\n",
            "  \u001b[01;35m\u001b[K^~~~~~~\u001b[m\u001b[K\n",
            "In file included from \u001b[01m\u001b[K/usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/ndarrayobject.h:27:0\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[K/usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/arrayobject.h:4\u001b[m\u001b[K,\n",
            "                 from \u001b[01m\u001b[Kim2col_cython.c:232\u001b[m\u001b[K:\n",
            "\u001b[01m\u001b[K/usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/__multiarray_api.h:1463:1:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K‘\u001b[01m\u001b[K_import_array\u001b[m\u001b[K’ defined but not used [\u001b[01;35m\u001b[K-Wunused-function\u001b[m\u001b[K]\n",
            " \u001b[01;35m\u001b[K_import_array\u001b[m\u001b[K(void)\n",
            " \u001b[01;35m\u001b[K^~~~~~~~~~~~~\u001b[m\u001b[K\n",
            "x86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -Wdate-time -D_FORTIFY_SOURCE=2 -g -fdebug-prefix-map=/build/python2.7-nbjU53/python2.7-2.7.15~rc1=. -fstack-protector-strong -Wformat -Werror=format-security -Wl,-Bsymbolic-functions -Wl,-z,relro -Wdate-time -D_FORTIFY_SOURCE=2 -g -fdebug-prefix-map=/build/python2.7-nbjU53/python2.7-2.7.15~rc1=. -fstack-protector-strong -Wformat -Werror=format-security build/temp.linux-x86_64-2.7/im2col_cython.o -o /content/im2col_cython.so\n",
            "--2018-11-11 06:15:32--  http://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n",
            "Resolving www.cs.toronto.edu (www.cs.toronto.edu)... 128.100.3.30\n",
            "Connecting to www.cs.toronto.edu (www.cs.toronto.edu)|128.100.3.30|:80... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 170498071 (163M) [application/x-gzip]\n",
            "Saving to: ‘cifar-10-python.tar.gz’\n",
            "\n",
            "cifar-10-python.tar 100%[===================>] 162.60M  5.21MB/s    in 17s     \n",
            "\n",
            "2018-11-11 06:15:49 (9.85 MB/s) - ‘cifar-10-python.tar.gz’ saved [170498071/170498071]\n",
            "\n",
            "cifar-10-batches-py/\n",
            "cifar-10-batches-py/data_batch_4\n",
            "cifar-10-batches-py/readme.html\n",
            "cifar-10-batches-py/test_batch\n",
            "cifar-10-batches-py/data_batch_3\n",
            "cifar-10-batches-py/batches.meta\n",
            "cifar-10-batches-py/data_batch_2\n",
            "cifar-10-batches-py/data_batch_5\n",
            "cifar-10-batches-py/data_batch_1\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "6C9ZWqH0CE5T",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# As usual, a bit of setup\n",
        "from __future__ import print_function\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from HW5_code.data_utils import get_CIFAR10_data\n",
        "from HW5_code.gradient_check import eval_numerical_gradient_array, eval_numerical_gradient\n",
        "from HW5_code.layers import *\n",
        "from HW5_code.fast_layers import *\n",
        "from HW5_code.solver import Solver\n",
        "from HW5_code.layer_utils import *\n",
        "\n",
        "## magic command: embed figure and chart into this notebook\n",
        "%matplotlib inline   \n",
        "plt.rcParams['figure.figsize'] = (10.0, 8.0) # set default size of plots\n",
        "plt.rcParams['image.interpolation'] = 'nearest'\n",
        "plt.rcParams['image.cmap'] = 'gray'\n",
        "\n",
        "# for auto-reloading external modules\n",
        "# see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython\n",
        "%load_ext autoreload\n",
        "%autoreload 2\n",
        "\n",
        "def rel_error(x, y):\n",
        "  \"\"\" returns relative error \"\"\"\n",
        "  return np.max(np.abs(x - y) / (np.maximum(1e-8, np.abs(x) + np.abs(y))))  ## max(): select max value of the vector. maximum(): select max between x and y\n",
        "\n",
        "class ThreeLayerConvNet(object):\n",
        "    \"\"\"\n",
        "    A three-layer convolutional network with the following architecture:\n",
        "    conv - relu - 2x2 max pool - fc - relu - fc - softmax\n",
        "    The network operates on minibatches of data that have shape (N, C, H, W)\n",
        "    consisting of N images, each with height H and width W and with C input\n",
        "    channels.\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self, input_dim=(3, 32, 32), num_filters=32, filter_size=7,\n",
        "                 hidden_dim=100, num_classes=10, weight_scale=1e-3, reg=0.0,\n",
        "                 dtype=np.float32):\n",
        "        \"\"\"\n",
        "        Initialize a new network.\n",
        "        Inputs:\n",
        "        - input_dim: Tuple (C, H, W) giving size of input data\n",
        "        - num_filters: Number of filters to use in the convolutional layer\n",
        "        - filter_size: Size of filters to use in the convolutional layer\n",
        "        - hidden_dim: Number of units to use in the fully-connected hidden layer\n",
        "        - num_classes: Number of scores to produce from the final fc layer.\n",
        "        - weight_scale: Scalar giving standard deviation for random initialization\n",
        "          of weights.\n",
        "        - reg: Scalar giving L2 regularization strength\n",
        "        - dtype: numpy datatype to use for computation.\n",
        "        \"\"\"\n",
        "        self.params = {}  ## store weights and biases of each layer\n",
        "        self.reg = reg\n",
        "        self.dtype = dtype\n",
        "        \n",
        "        C, H, W = input_dim\n",
        "        ## Initial 1st layer (conv): [32, 3, 7, 7] \n",
        "        ## there are 32 kernals in this layer, and each kernal has 3 dimensions (corresponding to original graph's channel RGB),\n",
        "        ## and each kernal is 7x7\n",
        "        self.params['W1'] = np.random.normal(0, weight_scale, [num_filters, 3, filter_size, filter_size])\n",
        "        self.params['b1'] = np.zeros([num_filters]) # each filter (kernal) has a bias\n",
        "        \n",
        "        ## Initial 2nd layer (fc): after conv and max pooling, the weight and height are half, and channel changes from 3 to 32\n",
        "        ## so for fully connected layer, the shape would be [N, 16x16x32].\n",
        "        ## First, we will flatten the graph after conv from [32, 16, 16] to [32x16x16],\n",
        "        ## then, do fc and reduce the dimension from 32x16x16 to 100\n",
        "        self.params['W2'] = np.random.normal(0, weight_scale, [np.int(H/2)*np.int(H/2)*num_filters, hidden_dim])\n",
        "        self.params['b2'] = np.zeros([hidden_dim])\n",
        "        \n",
        "        ## Initial 3rd layer (fc): keep reducing the dimension from 100 to 10 (cifar dataset has 10 classes)\n",
        "        self.params['W3'] = np.random.normal(0, weight_scale, [hidden_dim, num_classes])\n",
        "        self.params['b3'] = np.zeros([num_classes])\n",
        "\n",
        "        for k, v in self.params.items(): ## set data type\n",
        "            self.params[k] = v.astype(dtype)\n",
        "\n",
        "\n",
        "    def loss(self, X, y=None):\n",
        "        \"\"\"\n",
        "        Evaluate loss and gradient for the three-layer convolutional network.\n",
        "        Input / output: Same API as TwoLayerNet in fc_net.py.\n",
        "        \"\"\"\n",
        "        W1, b1 = self.params['W1'], self.params['b1']\n",
        "        W2, b2 = self.params['W2'], self.params['b2']\n",
        "        W3, b3 = self.params['W3'], self.params['b3']\n",
        "\n",
        "        # pass conv_param to the forward pass for the convolutional layer\n",
        "        filter_size = W1.shape[2]  # 7\n",
        "        conv_param = {'stride': 1, 'pad': (filter_size - 1) // 2}  # floor division, padding = 3\n",
        "\n",
        "        # pass pool_param to the forward pass for the max-pooling layer\n",
        "        pool_param = {'pool_height': 2, 'pool_width': 2, 'stride': 2}  # halve the original size to 16x16\n",
        "\n",
        "        scores = None\n",
        "        \n",
        "        ## forward: [N, 3, 32, 32] -> [N, 10]\n",
        "        layer1_out, combined_cache = conv_relu_pool_forward(X, W1, b1, conv_param, pool_param) # 1st layer: conv + relu + 2x2 max pool\n",
        "        fc1_out, fc1_cache = fc_forward(layer1_out, W2, b2) # 2nd layer: fc\n",
        "        relu2_out, relu2_cache = relu_forward(fc1_out) # 2nd layer: relu\n",
        "        fc2_out, fc2_cache = fc_forward(relu2_out, W3, b3) # 3rd layer: fc\n",
        "\n",
        "        scores = np.copy(fc2_out)\n",
        "        if y is None:\n",
        "            return scores\n",
        "\n",
        "        loss, grads = 0, {}\n",
        "        \n",
        "        loss, dsoft = softmax_loss(scores, y)  # 3rd layer: softmax\n",
        "        loss += self.reg*0.5*(np.sum(np.square(W1)) + np.sum(np.square(W2)) + np.sum(np.square(W3)))\n",
        "\n",
        "        ## backward: [N, 10] -> [N, 3, 32, 32]\n",
        "        dx3, dw3, db3 = fc_backward(dsoft, fc2_cache) # oppo 3rd layer: fc\n",
        "        drelu2 = relu_backward(dx3, relu2_cache)\n",
        "        dx2, dw2, db2 = fc_backward(drelu2, fc1_cache) # oppo 2nd layer: fc\n",
        "        dx1, dw1, db1 = conv_relu_pool_backward(dx2, combined_cache) # oppo 1st layer: conv + relu + pool\n",
        "\n",
        "        grads['W3'], grads['b3'] = dw3 + self.reg*W3, db3\n",
        "        grads['W2'], grads['b2'] = dw2 + self.reg*W2, db2\n",
        "        grads['W1'], grads['b1'] = dw1 + self.reg*W1, db1\n",
        "\n",
        "        return loss, grads\n",
        "\n",
        "\n",
        "def conv_forward_naive(x, w, b, conv_param):\n",
        "    \"\"\"\n",
        "    A naive implementation of the forward pass for a convolutional layer.\n",
        "\n",
        "    The input consists of N data points, each with C channels, height H and\n",
        "    width W. We convolve each input with F different filters, where each filter\n",
        "    spans all C channels and has height HH and width HH.\n",
        "\n",
        "    Input:\n",
        "    - x: Input data of shape (N, C, H, W)\n",
        "    - w: Filter weights of shape (F, C, HH, WW)\n",
        "    - b: Biases, of shape (F,)\n",
        "    - conv_param: A dictionary with the following keys:\n",
        "      - 'stride': The number of pixels between adjacent receptive fields in the\n",
        "        horizontal and vertical directions.\n",
        "      - 'pad': The number of pixels that will be used to zero-pad the input.\n",
        "\n",
        "    Returns a tuple of:\n",
        "    - out: Output data, of shape (N, F, H', W') where H' and W' are given by\n",
        "      H' = 1 + (H + 2 * pad - HH) / stride\n",
        "      W' = 1 + (W + 2 * pad - WW) / stride\n",
        "    - cache: (x, w, b, conv_param)\n",
        "    \"\"\"\n",
        "    out = None\n",
        "\n",
        "    pad = conv_param.get('pad')   # 3\n",
        "    stride = conv_param.get('stride') # 1\n",
        "    N, C, H, W = x.shape    # [N, 3, 32, 32]\n",
        "    F, C, HH, WW = w.shape  # [32, 3, 7, 7]\n",
        "\n",
        "    padded_x = (np.pad(x, ((0, 0), (0, 0), (pad, pad), (pad, pad)), 'constant'))  # [N, 3, 38, 38]\n",
        "    out_H = np.int(((H + 2 * pad - HH) / stride) + 1)  # 32\n",
        "    out_W = np.int(((W + 2 * pad - WW) / stride) + 1)  # 32\n",
        "    out = np.zeros([N, F, out_H, out_W])  # [N, 32, 32, 32]\n",
        "\n",
        "    ###########################################################################\n",
        "    # TODO: Implement the convolutional forward pass.                         #\n",
        "    # Hint: you can use the function np.pad for padding.                      #\n",
        "    ###########################################################################\n",
        "    for img in range(N):  # for each image, do convolutional process\n",
        "        for kernal in range(F):  # for each channel, there are 3 W (7x7) and 1 b (scalar), linear sum together\n",
        "            for row in range(out_H):  # from top to bottom\n",
        "                for col in range(out_W):  # from left to right\n",
        "                    # each kernal has 3 W (7x7), for each elements in W, multiply it with corresponding elements in original graph\n",
        "                    # then add up these 49 numbers together -> 1 scalar\n",
        "                    # then add up three scalar and 1 bias, as the current position's convolutional result\n",
        "                    out[img, kernal, row, col] = np.sum(w[kernal, ...] * \\\n",
        "                                                        padded_x[img, :, row*stride:row*stride+HH, col*stride:col*stride+WW]) + b[kernal]\n",
        "                        \n",
        "    cache = (x, w, b, conv_param)\n",
        "    return out, cache\n",
        "\n",
        "\n",
        "def conv_backward_naive(dout, cache):\n",
        "    \"\"\"\n",
        "    A naive implementation of the backward pass for a convolutional layer.\n",
        "\n",
        "    Inputs:\n",
        "    - dout: Upstream derivatives.\n",
        "    - cache: A tuple of (x, w, b, conv_param) as in conv_forward_naive\n",
        "\n",
        "    Returns a tuple of:\n",
        "    - dx: Gradient with respect to x\n",
        "    - dw: Gradient with respect to w\n",
        "    - db: Gradient with respect to b\n",
        "    \"\"\"\n",
        "    dx, dw, db = None, None, None\n",
        "    ###########################################################################\n",
        "    # TODO: Implement the convolutional backward pass.                        #\n",
        "    ###########################################################################\n",
        "    \n",
        "    x, w, b, conv_param = cache\n",
        "    stride = conv_param.get('stride')\n",
        "    pad = conv_param.get('pad')\n",
        "    padded_x = (np.pad(x, ((0, 0), (0, 0), (pad, pad), (pad, pad)), 'constant'))  # [N, 3, 38, 38]\n",
        "\n",
        "    N, C, H, W = x.shape  # [N, 3, 32, 32]\n",
        "    F, C, HH, WW = w.shape  # [32, 3, 7, 7]\n",
        "    N, F, H_out, W_out = dout.shape  # [N, 32, 32, 32]\n",
        "\n",
        "    dx_temp = np.zeros_like(padded_x)  # initial to all zeros\n",
        "    dw = np.zeros_like(w)\n",
        "    db = np.zeros_like(b)\n",
        "\n",
        "    # Calculate dB.\n",
        "    for kernal in range(F):\n",
        "        db[kernal] += np.sum(dout[:, kernal, :, :])  # sum all N img's kernal -> [32, 32], then sum all 32x32 elements -> 1 scalar\n",
        "    \n",
        "    # Calculate dw.\n",
        "    for img in range(N):  # for each image\n",
        "        for kernal in range(F):  # for each kernal\n",
        "            for row in range(H_out):  # from top to bottom\n",
        "                for col in range(W_out):  # from left to right\n",
        "                    dw[kernal, ...] += dout[img, kernal, row, col] * padded_x[img, :, row*stride:row*stride+HH, col*stride:col*stride+WW]\n",
        "    \n",
        "    # Calculate dx.\n",
        "    for img in range(N):  # for each image\n",
        "        for kernal in range(F):  # for each kernal\n",
        "            for row in range(H_out):  # from top to bottom\n",
        "                for col in range(W_out):  # from left to right\n",
        "                    dx_temp[img, :, row*stride:row*stride+HH, col*stride:col*stride+WW] += dout[img, kernal, row,col] * w[kernal, ...]\n",
        "    \n",
        "    dx = dx_temp[:, :, pad:H+pad, pad:W+pad]\n",
        "    \n",
        "    return dx, dw, db\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "BRyiGqp9-3Uh",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "1475a1ed-3465-404f-9ac2-e93ff4a363ba"
      },
      "cell_type": "code",
      "source": [
        "# Load the (preprocessed) CIFAR10 data.\n",
        "\n",
        "data = get_CIFAR10_data()\n",
        "for k, v in data.items():\n",
        "  print('%s: ' % k, v.shape)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "X_val:  (1000, 3, 32, 32)\n",
            "X_train:  (49000, 3, 32, 32)\n",
            "X_test:  (1000, 3, 32, 32)\n",
            "y_val:  (1000,)\n",
            "y_train:  (49000,)\n",
            "y_test:  (1000,)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "WO2r9nOa-3Uq",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# Convolution: Naive forward pass\n",
        "The core of a convolutional network is the convolution operation. In the file `HW5_code/layers.py`, implement the forward pass for the convolution layer in the function `conv_forward_naive`. \n",
        "\n",
        "You don't have to worry too much about efficiency at this point; just write the code in whatever way you find most clear.\n",
        "\n",
        "You can test your implementation by running the following:"
      ]
    },
    {
      "metadata": {
        "id": "IDXKQokg-3Ut",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "73548f6b-1a1b-43d4-d350-61cd50c70736"
      },
      "cell_type": "code",
      "source": [
        "x_shape = (2, 3, 4, 4)\n",
        "w_shape = (3, 3, 4, 4)\n",
        "x = np.linspace(-0.1, 0.5, num=np.prod(x_shape)).reshape(x_shape)\n",
        "w = np.linspace(-0.2, 0.3, num=np.prod(w_shape)).reshape(w_shape)\n",
        "b = np.linspace(-0.1, 0.2, num=3)\n",
        "\n",
        "conv_param = {'stride': 2, 'pad': 1}\n",
        "out, _ = conv_forward_naive(x, w, b, conv_param)\n",
        "correct_out = np.array([[[[-0.08759809, -0.10987781],\n",
        "                           [-0.18387192, -0.2109216 ]],\n",
        "                          [[ 0.21027089,  0.21661097],\n",
        "                           [ 0.22847626,  0.23004637]],\n",
        "                          [[ 0.50813986,  0.54309974],\n",
        "                           [ 0.64082444,  0.67101435]]],\n",
        "                         [[[-0.98053589, -1.03143541],\n",
        "                           [-1.19128892, -1.24695841]],\n",
        "                          [[ 0.69108355,  0.66880383],\n",
        "                           [ 0.59480972,  0.56776003]],\n",
        "                          [[ 2.36270298,  2.36904306],\n",
        "                           [ 2.38090835,  2.38247847]]]])\n",
        "\n",
        "# Compare your output to ours; difference should be around 2e-8\n",
        "print('Testing conv_forward_naive')\n",
        "print('difference: ', rel_error(out, correct_out))"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Testing conv_forward_naive\n",
            "difference:  2.2121476417505994e-08\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "VuA0qnU2-3U5",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# Convolution: Naive backward pass\n",
        "Implement the backward pass for the convolution operation in the function `conv_backward_naive` in the file `HW5_code/layers.py`. Again, you don't need to worry too much about computational efficiency.\n",
        "\n",
        "When you are done, run the following to check your backward pass with a numeric gradient check."
      ]
    },
    {
      "metadata": {
        "id": "RzndzpbP-3U6",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "5e378be7-b3a9-4989-cf8c-a2e9d83b8f64"
      },
      "cell_type": "code",
      "source": [
        "np.random.seed(231)\n",
        "x = np.random.randn(4, 3, 5, 5)\n",
        "w = np.random.randn(2, 3, 3, 3)\n",
        "b = np.random.randn(2,)\n",
        "dout = np.random.randn(4, 2, 5, 5)\n",
        "conv_param = {'stride': 1, 'pad': 1}\n",
        "\n",
        "dx_num = eval_numerical_gradient_array(lambda x: conv_forward_naive(x, w, b, conv_param)[0], x, dout)\n",
        "dw_num = eval_numerical_gradient_array(lambda w: conv_forward_naive(x, w, b, conv_param)[0], w, dout)\n",
        "db_num = eval_numerical_gradient_array(lambda b: conv_forward_naive(x, w, b, conv_param)[0], b, dout)\n",
        "\n",
        "out, cache = conv_forward_naive(x, w, b, conv_param)\n",
        "dx, dw, db = conv_backward_naive(dout, cache)\n",
        "\n",
        "# Your errors should be around 1e-8'\n",
        "print('Testing conv_backward_naive function')\n",
        "print('dx error: ', rel_error(dx, dx_num))\n",
        "print('dw error: ', rel_error(dw, dw_num))\n",
        "print('db error: ', rel_error(db, db_num))"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Testing conv_backward_naive function\n",
            "dx error:  1.159803161159293e-08\n",
            "dw error:  2.2471264748452487e-10\n",
            "db error:  3.3726153958780465e-11\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "sI8YpUhP-3W5",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# Fast layers\n",
        "Making convolution and pooling layers fast can be challenging. To spare you the pain, we've provided fast implementations of the forward and backward passes for convolution and pooling layers in the file `HW5_code/fast_layers.py`.\n",
        "\n",
        "The fast convolution implementation depends on a Cython extension; to compile it you need to run the following from the `HW5_code` directory:\n",
        "\n",
        "```bash\n",
        "python setup.py build_ext --inplace\n",
        "```\n",
        "\n",
        "The API for the fast versions of the convolution and pooling layers is exactly the same as the naive versions that you implemented above: the forward pass receives data, weights, and parameters and produces outputs and a cache object; the backward pass recieves upstream derivatives and the cache object and produces gradients with respect to the data and weights.\n",
        "\n",
        "**NOTE:** The fast implementation for pooling will only perform optimally if the pooling regions are non-overlapping and tile the input. If these conditions are not met then the fast pooling implementation will not be much faster than the naive implementation.\n",
        "\n",
        "You can compare the performance of the naive and fast versions of these layers by running the following:"
      ]
    },
    {
      "metadata": {
        "id": "RdXYpdis-3W8",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "5ca314ad-3c67-45a4-e5f0-b5093155aea1"
      },
      "cell_type": "code",
      "source": [
        "from HW5_code.fast_layers import conv_forward_fast, conv_backward_fast\n",
        "from time import time\n",
        "np.random.seed(231)\n",
        "x = np.random.randn(100, 3, 31, 31)\n",
        "w = np.random.randn(25, 3, 3, 3)\n",
        "b = np.random.randn(25,)\n",
        "dout = np.random.randn(100, 25, 16, 16)\n",
        "conv_param = {'stride': 2, 'pad': 1}\n",
        "\n",
        "t0 = time()\n",
        "out_naive, cache_naive = conv_forward_naive(x, w, b, conv_param)\n",
        "t1 = time()\n",
        "out_fast, cache_fast = conv_forward_fast(x, w, b, conv_param)\n",
        "t2 = time()\n",
        "\n",
        "print('Testing conv_forward_fast:')\n",
        "print('Naive: %fs' % (t1 - t0))\n",
        "print('Fast: %fs' % (t2 - t1))\n",
        "print('Speedup: %fx' % ((t1 - t0) / (t2 - t1)))\n",
        "print('Difference: ', rel_error(out_naive, out_fast))\n",
        "\n",
        "t0 = time()\n",
        "dx_naive, dw_naive, db_naive = conv_backward_naive(dout, cache_naive)\n",
        "t1 = time()\n",
        "dx_fast, dw_fast, db_fast = conv_backward_fast(dout, cache_fast)\n",
        "t2 = time()\n",
        "\n",
        "print('\\nTesting conv_backward_fast:')\n",
        "print('Naive: %fs' % (t1 - t0))\n",
        "print('Fast: %fs' % (t2 - t1))\n",
        "print('Speedup: %fx' % ((t1 - t0) / (t2 - t1)))\n",
        "print('dx difference: ', rel_error(dx_naive, dx_fast))\n",
        "print('dw difference: ', rel_error(dw_naive, dw_fast))\n",
        "print('db difference: ', rel_error(db_naive, db_fast))"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Testing conv_forward_fast:\n",
            "Naive: 4.736610s\n",
            "Fast: 0.016920s\n",
            "Speedup: 279.943946x\n",
            "Difference:  4.926407851494105e-11\n",
            "\n",
            "Testing conv_backward_fast:\n",
            "Naive: 8.740348s\n",
            "Fast: 0.013804s\n",
            "Speedup: 633.176915x\n",
            "dx difference:  1.949764775345631e-11\n",
            "dw difference:  3.681156828004736e-13\n",
            "db difference:  3.1393858025571252e-15\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "cRRLDOYH-3XA",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        },
        "outputId": "0ddb7007-0a8d-4783-caa4-52389f076554"
      },
      "cell_type": "code",
      "source": [
        "from HW5_code.fast_layers import max_pool_forward_fast, max_pool_backward_fast\n",
        "np.random.seed(231)\n",
        "x = np.random.randn(100, 3, 32, 32)\n",
        "dout = np.random.randn(100, 3, 16, 16)\n",
        "pool_param = {'pool_height': 2, 'pool_width': 2, 'stride': 2}\n",
        "\n",
        "t0 = time()\n",
        "out_naive, cache_naive = max_pool_forward_naive(x, pool_param)\n",
        "t1 = time()\n",
        "out_fast, cache_fast = max_pool_forward_fast(x, pool_param)\n",
        "t2 = time()\n",
        "\n",
        "print('Testing pool_forward_fast:')\n",
        "print('Naive: %fs' % (t1 - t0))\n",
        "print('fast: %fs' % (t2 - t1))\n",
        "print('speedup: %fx' % ((t1 - t0) / (t2 - t1)))\n",
        "print('difference: ', rel_error(out_naive, out_fast))\n",
        "\n",
        "t0 = time()\n",
        "dx_naive = max_pool_backward_naive(dout, cache_naive)\n",
        "t1 = time()\n",
        "dx_fast = max_pool_backward_fast(dout, cache_fast)\n",
        "t2 = time()\n",
        "\n",
        "print('\\nTesting pool_backward_fast:')\n",
        "print('Naive: %fs' % (t1 - t0))\n",
        "print('speedup: %fx' % ((t1 - t0) / (t2 - t1)))\n",
        "print('dx difference: ', rel_error(dx_naive, dx_fast))"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Testing pool_forward_fast:\n",
            "Naive: 0.360549s\n",
            "fast: 0.002549s\n",
            "speedup: 141.450940x\n",
            "difference:  0.0\n",
            "\n",
            "Testing pool_backward_fast:\n",
            "Naive: 0.462405s\n",
            "speedup: 33.288142x\n",
            "dx difference:  0.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "ILANeX-z-3Xv",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# Three-layer ConvNet\n",
        "Now that you have implemented all the necessary layers, we can put them together into a simple convolutional network.\n",
        "\n",
        "Open the file `HW5_code/classifiers/cnn.py` and complete the implementation of the `ThreeLayerConvNet` class. Run the following cells to help you debug:"
      ]
    },
    {
      "metadata": {
        "id": "itHSETJ2-3Xw",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Sanity check loss\n",
        "After you build a new network, one of the first things you should do is sanity check the loss. When we use the softmax loss, we expect the loss for random weights (and no regularization) to be about `log(C)` for `C` classes. When we add regularization this should go up."
      ]
    },
    {
      "metadata": {
        "id": "kv0O3yoA-3Xy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "7dde191e-7113-485f-e3fd-f353b93e094d"
      },
      "cell_type": "code",
      "source": [
        "model = ThreeLayerConvNet()\n",
        "\n",
        "N = 50\n",
        "X = np.random.randn(N, 3, 32, 32)\n",
        "y = np.random.randint(10, size=N)\n",
        "\n",
        "loss, grads = model.loss(X, y)\n",
        "print('Initial loss (no regularization): ', loss)  # log10 = 3.32\n",
        "\n",
        "model.reg = 0.5\n",
        "loss, grads = model.loss(X, y)\n",
        "print('Initial loss (with regularization): ', loss)"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Initial loss (no regularization):  2.3025858848360223\n",
            "Initial loss (with regularization):  2.508810654189889\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "V1_xvb7b-3YG",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Gradient check\n",
        "After the loss looks reasonable, use numeric gradient checking to make sure that your backward pass is correct. When you use numeric gradient checking you should use a small amount of artifical data and a small number of neurons at each layer. Note: correct implementations may still have relative errors up to 1e-2."
      ]
    },
    {
      "metadata": {
        "id": "ZBFCiUq1-3YJ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "295b2a7b-d263-4076-8546-1ab42c47d55c"
      },
      "cell_type": "code",
      "source": [
        "num_inputs = 2\n",
        "input_dim = (3, 16, 16)\n",
        "reg = 0.0\n",
        "num_classes = 10\n",
        "np.random.seed(231)\n",
        "X = np.random.randn(num_inputs, *input_dim)\n",
        "y = np.random.randint(num_classes, size=num_inputs)\n",
        "\n",
        "model = ThreeLayerConvNet(num_filters=3, filter_size=3,\n",
        "                          input_dim=input_dim, hidden_dim=7,\n",
        "                          dtype=np.float64)\n",
        "loss, grads = model.loss(X, y)\n",
        "for param_name in sorted(grads):\n",
        "    f = lambda _: model.loss(X, y)[0]\n",
        "    param_grad_num = eval_numerical_gradient(f, model.params[param_name], verbose=False, h=1e-6)\n",
        "    e = rel_error(param_grad_num, grads[param_name])\n",
        "    print('%s max relative error: %e' % (param_name, rel_error(param_grad_num, grads[param_name])))"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "W1 max relative error: 1.380104e-04\n",
            "W2 max relative error: 1.822723e-02\n",
            "W3 max relative error: 3.064049e-04\n",
            "b1 max relative error: 3.477652e-05\n",
            "b2 max relative error: 2.516375e-03\n",
            "b3 max relative error: 7.945660e-10\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "3KVdehwr-3YS",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Overfit small data\n",
        "A nice trick is to train your model with just a few training samples. You should be able to overfit small datasets, which will result in very high training accuracy and comparatively low validation accuracy."
      ]
    },
    {
      "metadata": {
        "id": "vrToXqrv-3YT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "outputId": "01dd018c-e35d-4d8b-d84f-977e96761d87"
      },
      "cell_type": "code",
      "source": [
        "np.random.seed(6666666)\n",
        "\n",
        "num_train = 100\n",
        "small_data = {\n",
        "  'X_train': data['X_train'][:num_train],\n",
        "  'y_train': data['y_train'][:num_train],\n",
        "  'X_val': data['X_val'],\n",
        "  'y_val': data['y_val'],\n",
        "}\n",
        "\n",
        "model = ThreeLayerConvNet(weight_scale=1e-2)\n",
        "\n",
        "solver = Solver(model, small_data,\n",
        "                num_epochs=15, batch_size=50,\n",
        "                update_rule='adam',\n",
        "                optim_config={\n",
        "                  'learning_rate': 1e-3,\n",
        "                },\n",
        "                verbose=True, print_every=1)\n",
        "solver.train()"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(Epoch 0 / 15, iteration 1 / 30) train acc: 0.170000; val_acc: 0.119000\n",
            "(Epoch 1 / 15, iteration 2 / 30) train acc: 0.180000; val_acc: 0.119000\n",
            "(Epoch 1 / 15, iteration 3 / 30) train acc: 0.250000; val_acc: 0.134000\n",
            "(Epoch 2 / 15, iteration 4 / 30) train acc: 0.260000; val_acc: 0.121000\n",
            "(Epoch 2 / 15, iteration 5 / 30) train acc: 0.210000; val_acc: 0.109000\n",
            "(Epoch 3 / 15, iteration 6 / 30) train acc: 0.400000; val_acc: 0.128000\n",
            "(Epoch 3 / 15, iteration 7 / 30) train acc: 0.400000; val_acc: 0.119000\n",
            "(Epoch 4 / 15, iteration 8 / 30) train acc: 0.400000; val_acc: 0.150000\n",
            "(Epoch 4 / 15, iteration 9 / 30) train acc: 0.360000; val_acc: 0.164000\n",
            "(Epoch 5 / 15, iteration 10 / 30) train acc: 0.380000; val_acc: 0.150000\n",
            "(Epoch 5 / 15, iteration 11 / 30) train acc: 0.380000; val_acc: 0.112000\n",
            "(Epoch 6 / 15, iteration 12 / 30) train acc: 0.420000; val_acc: 0.127000\n",
            "(Epoch 6 / 15, iteration 13 / 30) train acc: 0.560000; val_acc: 0.164000\n",
            "(Epoch 7 / 15, iteration 14 / 30) train acc: 0.580000; val_acc: 0.187000\n",
            "(Epoch 7 / 15, iteration 15 / 30) train acc: 0.620000; val_acc: 0.196000\n",
            "(Epoch 8 / 15, iteration 16 / 30) train acc: 0.610000; val_acc: 0.194000\n",
            "(Epoch 8 / 15, iteration 17 / 30) train acc: 0.690000; val_acc: 0.197000\n",
            "(Epoch 9 / 15, iteration 18 / 30) train acc: 0.710000; val_acc: 0.185000\n",
            "(Epoch 9 / 15, iteration 19 / 30) train acc: 0.690000; val_acc: 0.172000\n",
            "(Epoch 10 / 15, iteration 20 / 30) train acc: 0.710000; val_acc: 0.181000\n",
            "(Epoch 10 / 15, iteration 21 / 30) train acc: 0.770000; val_acc: 0.188000\n",
            "(Epoch 11 / 15, iteration 22 / 30) train acc: 0.720000; val_acc: 0.191000\n",
            "(Epoch 11 / 15, iteration 23 / 30) train acc: 0.720000; val_acc: 0.200000\n",
            "(Epoch 12 / 15, iteration 24 / 30) train acc: 0.760000; val_acc: 0.197000\n",
            "(Epoch 12 / 15, iteration 25 / 30) train acc: 0.800000; val_acc: 0.184000\n",
            "(Epoch 13 / 15, iteration 26 / 30) train acc: 0.800000; val_acc: 0.180000\n",
            "(Epoch 13 / 15, iteration 27 / 30) train acc: 0.850000; val_acc: 0.183000\n",
            "(Epoch 14 / 15, iteration 28 / 30) train acc: 0.900000; val_acc: 0.194000\n",
            "(Epoch 14 / 15, iteration 29 / 30) train acc: 0.920000; val_acc: 0.203000\n",
            "(Epoch 15 / 15, iteration 30 / 30) train acc: 0.950000; val_acc: 0.208000\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "ecoSFk2y-3YZ",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Plotting the loss, training accuracy, and validation accuracy should show clear overfitting:"
      ]
    },
    {
      "metadata": {
        "id": "r8WyU2tJ-3Yb",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 497
        },
        "outputId": "f9e724bb-0b9c-4a2d-a929-96590df0f49c"
      },
      "cell_type": "code",
      "source": [
        "plt.subplot(2, 1, 1)\n",
        "plt.plot(solver.loss_history, 'o')\n",
        "plt.xlabel('iteration')\n",
        "plt.ylabel('loss')\n",
        "\n",
        "plt.subplot(2, 1, 2)\n",
        "plt.plot(solver.train_acc_history, '-o')\n",
        "plt.plot(solver.val_acc_history, '-o')\n",
        "plt.legend(['train', 'val'], loc='upper left')\n",
        "plt.xlabel('epoch')\n",
        "plt.ylabel('accuracy')\n",
        "plt.show()"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0113258650>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "RxC48Xkv-3Yg",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Train the net\n",
        "By training the three-layer convolutional network for one epoch, you should achieve greater than 40% accuracy on the training set:"
      ]
    },
    {
      "metadata": {
        "scrolled": false,
        "id": "VAhfjmNS-3Yi",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        },
        "outputId": "18643dee-4490-4709-968a-aa210861f9d7"
      },
      "cell_type": "code",
      "source": [
        "model = ThreeLayerConvNet(reg=0.001)\n",
        "\n",
        "# Try to change update_rule : 'sgd' / 'sgd_momentum' / 'rmsprop' / 'adam'\n",
        "# Then try learning rate and reg.\n",
        "\n",
        "solver = Solver(model, data,\n",
        "                num_epochs=1, batch_size=200,\n",
        "                update_rule='adam',\n",
        "                optim_config={\n",
        "                  'learning_rate': 1e-3,\n",
        "                },\n",
        "                verbose=True, print_every=20)\n",
        "solver.train()"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.114000; val_acc: 0.123000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.238000; val_acc: 0.223000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.292000; val_acc: 0.266000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.349000; val_acc: 0.336000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.347000; val_acc: 0.340000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.402000; val_acc: 0.401000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.402000; val_acc: 0.420000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.408000; val_acc: 0.416000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.422000; val_acc: 0.447000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.426000; val_acc: 0.457000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.466000; val_acc: 0.462000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.488000; val_acc: 0.460000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.467000; val_acc: 0.474000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.499000; val_acc: 0.491000\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "21RGsBxx-3Y3",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Visualize Filters\n",
        "You can visualize the first-layer convolutional filters from the trained network by running the following:"
      ]
    },
    {
      "metadata": {
        "id": "Ldg8_urL-3Y5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 321
        },
        "outputId": "b6d9403e-66bd-45f6-8698-7091448d77da"
      },
      "cell_type": "code",
      "source": [
        "from HW5_code.vis_utils import visualize_grid\n",
        "\n",
        "grid = visualize_grid(model.params['W1'].transpose(0, 2, 3, 1))\n",
        "plt.imshow(grid.astype('uint8'))\n",
        "plt.axis('off')\n",
        "plt.gcf().set_size_inches(5, 5)\n",
        "plt.show()"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0110fd5dd0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "yJayvx9cwJGm",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "##Extra Credit\n",
        "\n",
        "Try to more interesting observation as you wish! "
      ]
    },
    {
      "metadata": {
        "id": "8XA8s8-J2_-e",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "**1. Accuracy according to different learning rate (update rule = 'adam', reg = 0.001), and visualize the first layer convolutional filters under each model.**"
      ]
    },
    {
      "metadata": {
        "id": "R3yIWLAH3d6i",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 3866
        },
        "outputId": "d9115813-39ac-4a1f-b44a-56b7737b33ef"
      },
      "cell_type": "code",
      "source": [
        "learning_rate = [5e-2, 1e-3, 3e-3, 5e-3, 1e-4, 1e-5]\n",
        "models = []\n",
        "\n",
        "for lr in learning_rate:\n",
        "    model = ThreeLayerConvNet(reg=0.001)\n",
        "\n",
        "    solver = Solver(model, data,\n",
        "                    num_epochs=1, batch_size=200,\n",
        "                    update_rule='adam',\n",
        "                    optim_config={\n",
        "                      'learning_rate': lr,\n",
        "                    },\n",
        "                    verbose=True, print_every=20)\n",
        "    solver.train()\n",
        "    models.append(model)\n",
        "\n",
        "    plt.plot(solver.val_acc_history, '-o')\n",
        "    \n",
        "plt.legend(['val (lr = 5e-2)', 'val (lr = 1e-3)', 'val (lr = 3e-3)', 'val (lr = 5e-3)', 'val (lr = 1e-4)', 'val (lr = 1e-5)'], loc='upper left')\n",
        "plt.xlabel('iteration')\n",
        "plt.ylabel('accuracy')\n",
        "plt.title('Accuracy vs Learning rate', fontsize=20)\n",
        "plt.show()\n",
        "\n",
        "# plot filters under each model\n",
        "for i in range(6):\n",
        "    grid = visualize_grid(models[i].params['W1'].transpose(0, 2, 3, 1))\n",
        "    plt.imshow(grid.astype('uint8'))\n",
        "    plt.title('First layer convolutional filter (lr = ' + str(learning_rate[i]) + ')', fontsize=14)\n",
        "    plt.axis('off')\n",
        "    plt.gcf().set_size_inches(5, 5)\n",
        "    plt.show()"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.093000; val_acc: 0.105000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.101000; val_acc: 0.078000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.116000; val_acc: 0.078000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.107000; val_acc: 0.087000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.088000; val_acc: 0.113000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.093000; val_acc: 0.113000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.092000; val_acc: 0.098000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.094000; val_acc: 0.107000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.107000; val_acc: 0.078000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.082000; val_acc: 0.102000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.112000; val_acc: 0.078000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.095000; val_acc: 0.105000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.108000; val_acc: 0.078000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.122000; val_acc: 0.078000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.126000; val_acc: 0.130000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.301000; val_acc: 0.321000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.375000; val_acc: 0.389000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.418000; val_acc: 0.437000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.465000; val_acc: 0.451000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.441000; val_acc: 0.468000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.487000; val_acc: 0.473000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.447000; val_acc: 0.459000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.464000; val_acc: 0.490000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.476000; val_acc: 0.530000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.509000; val_acc: 0.513000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.531000; val_acc: 0.520000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.526000; val_acc: 0.537000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.524000; val_acc: 0.522000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.133000; val_acc: 0.130000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.178000; val_acc: 0.180000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.218000; val_acc: 0.250000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.224000; val_acc: 0.234000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.284000; val_acc: 0.271000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.278000; val_acc: 0.276000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.178000; val_acc: 0.207000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.158000; val_acc: 0.172000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.202000; val_acc: 0.208000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.250000; val_acc: 0.235000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.268000; val_acc: 0.291000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.204000; val_acc: 0.239000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.247000; val_acc: 0.253000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.212000; val_acc: 0.222000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.120000; val_acc: 0.098000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.095000; val_acc: 0.079000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.116000; val_acc: 0.078000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.111000; val_acc: 0.102000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.103000; val_acc: 0.102000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.096000; val_acc: 0.119000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.110000; val_acc: 0.119000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.103000; val_acc: 0.119000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.111000; val_acc: 0.102000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.098000; val_acc: 0.102000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.094000; val_acc: 0.078000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.117000; val_acc: 0.078000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.089000; val_acc: 0.087000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.088000; val_acc: 0.087000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.195000; val_acc: 0.202000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.236000; val_acc: 0.253000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.288000; val_acc: 0.326000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.327000; val_acc: 0.352000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.358000; val_acc: 0.373000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.377000; val_acc: 0.370000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.411000; val_acc: 0.427000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.422000; val_acc: 0.425000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.403000; val_acc: 0.460000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.502000; val_acc: 0.472000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.478000; val_acc: 0.483000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.490000; val_acc: 0.487000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.471000; val_acc: 0.483000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.493000; val_acc: 0.486000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.106000; val_acc: 0.132000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.169000; val_acc: 0.178000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.178000; val_acc: 0.191000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.181000; val_acc: 0.187000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.230000; val_acc: 0.228000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.238000; val_acc: 0.241000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.266000; val_acc: 0.243000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.265000; val_acc: 0.265000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.296000; val_acc: 0.295000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.263000; val_acc: 0.298000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.308000; val_acc: 0.303000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.302000; val_acc: 0.318000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.327000; val_acc: 0.325000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.307000; val_acc: 0.317000\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nWT9KAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0110e6e110>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0110ceefd0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0110c40890>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAATAAAAFACAYAAAA72SAyAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvNQv5yAAAIABJREFUeJztnXmYZVV57t9TZ655ruqq7q7uqu7e\n3W3TQDNpEBnEIeCAoGjQJOiNcbxGY7wao0ET5xjgGiMmGgdMIOEGFKOIGAVEZKYbupvu1fNU1TXP\nwzl1pvvHPmXKWu+uroKmZMH7ex4f7Pes2sPae397nfWe71uhQqEAIYRwkZLf9QEIIcTTRQFMCOEs\nCmBCCGdRABNCOIsCmBDCWRTAhBDOEvldH8DTwfO8bwAoM8Zc9Sxs+x4Ajxpj/uJkb/v5wDPpH8/z\nDIDrjDFfP+kH9tv7WQXgIIBTjDE7yOfnA/gegDCAPwBwF4A6Y8yE53kFAK81xvzoWTy+1wC4HsDp\nAP4BQLkx5o3P1v6eC3iedw2As4wxrzmZ231OBjDP8w4BaAWQm/PRuDGm3hjzzmew7WoAVxpj/vnp\nH6FYCMVAcrYx5hYAMMZ4v9sj+g0fBPAYgCuMMXkACdZo7vGfDDzPawTwHQBvMMaMed6z2yWe58UA\nXAfgtQDKANwP4L3GmGMB7U8B8H8BbAEwCOBGAJ82xhSKn78RwCcAdAA4UPzstuJn5QD+HsBlAJIA\nDIBPGmPuBPBZAA95nvc+Y8w/nqzzey5/hfyQMSYx53/1J2G7LwfwpydhO+LEXAHgyt/1QRCqAewv\nBq/5eDaO/8MAnjDG3HeStxvEZwH8HoDzAbQD6Afwn6yh53lJAD8G8ACA5fCD3jsAvKv4+WYA/wrg\nUwAaAHwSwL95nrepuImvww9spwKoA3AzgO97nrfMGJMtHssni/s5KTwnR2AnwvO876A47PY872oA\nHwPwAwDvB7AZfudeB2ATgCyAn8G/CL8P/6tDied5KQCbjTF75tlPCMDfAvhD+BfkEICPGWN+5Hne\n2+B/DVhmjMkU29cD6AbwEvhv+E8W/7YF/tvoL4wxPy+2PQTgXwD8EYD7jDHvIPt/BYAvAVgH/233\nUWPMHcXPXgL/bbcJwBSAfwfwEWPMdLFP/hzA3wH4DIAaAD8E8Mfwg/dfGmNWztrPWgB7AKwHsLfY\nn2+HfxPvh/8W/f5812GWVoB/42+Cf8Oi2NdVxT74sjHmq57nlcy3n+JX1bsAbADwegCjAD5sjPmP\n4udbAFwL/2HJAvgJgPcZY8bmHuecY74XwHkAzitew7cAuBtAhTFmfFa7j5HjDxWvx+sB1APYCuD9\nxphts879w8X/fcMY86k5+w7D7/93BRzb1ZhzLxtjDsz6vK3Yh4zvzf1m4nleBMA7AbzDGHOwqH0U\nQI/neafNHPcsLoU/SrumGHB2ep73FQDvhh+c/hTAXcaYHxTb/9DzvJ8D+BP4o9ofAnjcGNNd3Nc3\n4d+j6wAcL57XDQDeBH9k94x5Lo/AFkMzgAL8B/Ug/CD1MwC18N8IFQA+boy5Gf4D/XhxRBcYvIq8\nDf7Ndj6ASvid/+/Fr6G3AYjBD4ozXAZgnzHmEQAfgB+8LoV/898A4HbP82pntb+q+Pn/mrtjz/Na\nAXwffhCqBvA5ALd6nrfC87wGAP8N4P/BD9YXAngd/KH9DG0AzgawEcDLALy5uK9bAbR4nnfGrLZX\nANhmjDEA3gP/4bmyeM7XA7jFW+R3HWPMF+Bfh+8X+zo9p8lC9vM++G/8uuJ/v1Z8qQDALQAehB9I\nNgE4E/7Df6LjOh/ALwFcb4xpXuTxfwHAWQDOLR7T3fAf4uisP70CwBkAPk02exb8e+HueQ5x7r08\n+5gOk28lM/9j0yodxf09PmsbfQCOFY9lLmcA2F4MXjM8DuAUz/MSxc8fn/M3j89syxhzizFmHwB4\nnlcF4OPwX0yPFD/Pw+/7i+Y5/0XxfAlglQC+aIzJFL+rVwOYMsZkjTFDAF5jjPk/T2O7NwFYY4w5\nVOz8m+G/oTYYYybhD8XfNqv9FQD+rfj/3wn/ITHF4/pn+KOoN81qf6cxZs/M/MIcrgRw2BhzU/Hv\nb4Y/gsrCD3xdxpjrjDFpY8xT8APkm+f0ySeNMRPFN+3e4nH3ArgXfrCd4fLiuQH+2/Rrxpitxf1+\ns/i3ly+41xbGQvbzsDHmp8UR7m3wX0iNxc9OA/DXxpicMaYHfkA/8yQf428ojhjfAeCzxphjxpgU\ngGvgvxxnP5C3GGO6A67pJgA9xSASxNx7+ZlQV/zv0Bx9EH7gZ+1Z2xL4ATXo89/alud5DwEYBvBq\n+M/e5KyPd8Dvh5PCc/kr5HWe5315jvaYMeZc0nbUGDM8698fB/AVz/P+CMBP4QeiR57GMZQBuNbz\nvEvgX8AZ4sX/fhfAnZ7nVcK/yBcBeG/xs47i384+hxIAK2b9+/A8++6A/Qa+BQA8z2sHsGtO+30A\nVs3699CcPpmEP7EK+KOX98Ofj1gO/806E1jbATx1gm2fDBayn9nnP/MQzJzDxQA+URyxReHfy786\nycc4m0b4werW4lfFGcJY+DWtg//Az8fce/lkEDpxkwW3PeG2jDHnFL+lvAfAfZ7nbTHGHC1+3A//\nW8NJ4bkcwD5kjPnqAtvOHvLCGPNNz/O+D/9r1esBPOB53gcXsb0Z/hG+G3MB/DmiSvhvlhl+CX/O\n63L4jukjM3MN8Oel3j0zZ7OQ455DHsEj5HiAPvvBmm+C+lYAX/U8rwP+18oHjTEzD95Ctk0pzvEs\nlKd9Dp7nrYf/9fljAG4wxkx6nncd/J8lPFtMFf/7MmPMQ/O0m++aAifux8C/X+wcGICZkV4dfvu+\nrQPQS7bRB3/OEXPa5uAH3j78z6hu3m0Vg/Dni/N6b4X/9Rvwz38xAXVeni9fIX8Lz/PqjTEDxphv\nG2Mugz8RTydOT8DZAP61+DWwAH+k8huK2o3wA9iV8OdpZtgH31CYfVyrFrHvAwB+a97J87x3eZ63\nAf68wvo57dcX93lCjDH9AO6BP9l+OXwDYIb9sG/ioG2nAJTO+nfHQvb/NPYzl9PhP+jXzvp6csY8\n7Z8xxpgR+KOHZ3JNB2AHgMUcw2LnwA7A/8r3m6/Wnue1wDdNHiTtHwWwufjTixnOBrC1OAf4KOyv\n6WcDeNDzvITnefs8z7tgzud5AJlZ/27A/wTWZ8xzeQT2tCh+Jdrved5b4LsipfC/c888GFMAmj3P\nq4P/u7K5k8uzOQDgzOIF3QR/UjkN/zdqM9wI4CPwH6g/nqXfAODLnuf9BL4tfSmAm4vD6aC36Gxu\nhv8Gey+AbwK4BL6zuhHAfwD4G8/zPlDczwb4X12vX8B2Z7gFwNXwb8jZc2ffAfBBz/N+CP9t/y74\nNzz7LdReAG/yPG8l/AflL+H3zwxTADYWv06Mz/nbxexnLgfgj+DO8DxvD3wHrAxA2SJHgSdi7vHf\nAOCvPM97AMBu+HNif+d5XtsCv/btANBUfMH2n8TjpBhjcp7nfR3+Mc/MS30ZwC+MMTsBwPO8GwHs\nMMZ8CcAd8IPspz3P+wyANfDNqJn5438C8LjneW8otn0dfEf3fcaYlOd52+Dfs2+B7zq+Hf5UwU9m\nHdaLAGw/Wef4vBuBGf8Hen8If9Q1Bv9mB/zgA/hWbh7AEfhvj/n4KIC18C/8V+B/ZbkRwDeK82Iw\nxuyH/5OJnxtjZs9vfBv+DwL/o3gcfwPgDxYYvFCcmL4YfmAaLv79G4uGwhH4k/Bvg3/D3Qr/F93X\nLmTbRW6Df/73Ffc1w7Xw3bfb4b8p3wLgwuI+5/IvAB6GPx+3Db6pMTrr85sArIbf1yvm/O1i9vNb\nFL/CXQd/4n4P/Df82+HPU957or9fBHOP/7PwX4p3w78mVwO4ZBFzVo8AGIHvGi8V18A/3sfgu48J\n+H09w0oUjZHiy/xS+L8b64cfpK41xnyv+PlT8F92n4N/na8BcPmM8wjfTX8C/s9LBuAbNW8o/t3M\nz5JeBuAXJ+vkQqrI+swoulO74c/Z/fh3fTziuY3neV8EsMUY84rf9bEsNZ7nXQb/92SrjTFTJ2q/\nEJ53I7ClpPhDwU/D/3rxkxM0FwLwf9h5uud5zE1/3lL8av8JAH97soIXoAD2tCnO+4wDeAWAN5sT\np6UIgeLv8K4G8J1i7uALhb+C79h/7WRuVF8hhRDOohGYEMJZFMCEEM6yJL8D+1Ld5+n31L2bpmn7\no7E2Syup5elTY/3cwT5rM/+h957R86j+42/ZPw7eue0G2va22+dm8fhEKgeovmnNyywtNllB226s\nts8dAI7Guqn+exdeQfX28/7b0kZCZbRtCPyncFO1VMY5VSupPlRrF4I4vypGWgLXf2rub1h93v5e\nXiqqbkPU0nK9E7Rt1wHeVyMpWgILF96aovpU46SlfaqXezWvb/s21V+8mV/PTLyH6qHKNZb2qiOP\n0bYV5879LbNPbIxf545r7fzt+7/7Ddo2leM/U6uI8/s2F+EJBJUR+zlMHOfPSfuagGpZr3pX4C/3\nNQITQjiLApgQwlkUwIQQzqIAJoRwFgUwIYSzLIkLebic5+fmfsldyJXvtWv+N+cepm07y7kTFa7h\nCxdVhKxVtgLZfd9Wqj/2S14374LXcoczO3bU0iqq+epSmc2rqf69m3ZTPYjDE7aDlgzx6zBRErDG\nwl7uLO1uq6F6ZMp2/7pSLQFHyNlaxmvdXVhmv2ur0jz5oX+smupTAS7s4Om8X2qGuIPKiA/cRvXU\nrlaqt7ZzF7YhYhtuu0O8zH9isIvqj9XOXcwrmMk0N/giEW5BT2S5CxmOcic7G8pY2njA4e3t5/Fg\nLW8OQCMwIYTDKIAJIZxFAUwI4SwKYEIIZ1EAE0I4y5K4kP15vpJUtoHnW51710st7fiVvAZa2Xa+\nFOCxEM9ZS+d5Hh8jl527BJ5PScVxqsfyfEWtlha7cnVrG393ZOPcEbv0VO6I8WxNYH2DvXZENNdI\nWgJTIe4gTdfZ+YcA0L6au5CTA/YxtrQu7h35ZzU8LzGx075XdjTytSEqAvpw495Oqo9n+b1Vn174\nGiX3TdquLwAMdvCcx82nVlK9OmLnCeaTc5cT8Hkiwd3jKbOf6oyHDxygejLGr/1UjoeMSIiffy5r\nu5CJad4nif38Xln7VioD0AhMCOEwCmBCCGdRABNCOIsCmBDCWZZkEr+1hBeYG07wib/0Frvw3JkP\n8kVchkoeoPo9/TxVY3rwZ1RnxLCH6qFRPrkfmeJrqjatSFhaRSNPD5k4ztd5OHCUT+QG0R+z+7Y8\nwi93oZenDI1n+OT2YCs3ZfpL7AnohiP2uc9H836eHlTXZk8G70rx92+qm+vRzAjVN042Ub3kQjLZ\nfBNtiovOvZ/qg62vpfrq0/kkeTRSZWm9PLsM6D9I5dToCZfW/J9tp0upXhHn+mTavg4AkA7x65wq\n2PdQ5TR/fvK5xY+nNAITQjiLApgQwlkUwIQQzqIAJoRwFgUwIYSzLIkLmVzF4+ToEC+aVltruz87\nKnlxwRfdzbfRspI7TgcytssTRDx8BtVPO40XzGvfYC9bBQCjVbaNVFfKl4MrXcaXj6toH6V6IHnb\nLeoBdxWR4s4f6nhaz+gU78NpkpGUK1/cOzKzljvWvffb57N27B7atq+Hu9vbD+zlO23g/XLhNp56\nxVh3yauoXrKCp121n81T4JItdopR06GHaNvQHl4s8tBkL9UZu8b4c1Id5i7pyDB3IfNR7p6nMva9\nVVrCbdWJFHfD50MjMCGEsyiACSGcRQFMCOEsCmBCCGdRABNCOMuSuJCrT19F9aEjds4jADRE7cMq\nqeHuxxOn8OXGagPcxtTqAMftQVsq1PIlsdrjvJBebTN3YuK/tnMq98a4E1O9lueJTU/y/MMgelJ2\nfyXLAi53M+/b0ATvq+p67k6WkJzKVNXClyYDAO8wd3gPX7zd0jL/xs+nbspexg4AOqq5y/X6AZ47\nWF7PHW6Gdwp3MsureRHFRPvdVJ84bp9/Q4IvBbg/v57qSSx8Cb67nrTzVwGgpob37fQEL0aYLOXX\nLRS2l2GLV/KcYeQDns150AhMCOEsCmBCCGdRABNCOIsCmBDCWRTAhBDOsiQuZDjJc7NaGhqobjL2\nkmCtFTynLNsWonpsFT+1+NjCK5uee8Yqqh/hq6ehZTnPYxysabO01DTvk/Iy7lptbOIuTxBnnWU7\nVOXLApbhGuN5luEh7tqt32SfDwCkpuwqsxurVtC2P6cqsO4s3odVO+3zv+ACvrzdoce38H0e5MvH\nIcSvRX0Vr9TKGHold9BuvrNA9S1b76R61wHb4e6N8pzMHb23UX1k4eYpInHuEleU8XtlopIvB5cI\n82e5OmFXdi1LlPFtRHn+5XxoBCaEcBYFMCGEsyiACSGcRQFMCOEsoUKBTzKe1J2EQs/+ToQQz0sK\nhQJ36qARmBDCYRTAhBDOogAmhHAWBTAhhLMogAkhnGVJUomuaL+M6g01PC3h5VvWWtras0+lbWNJ\nvrTUzuN8ea7Mr3gBt6tu/2NLK3z5S7TtZGSa6ukcL9Q2VW6n2GTGeApHYmqC6uEEL5bY8JFrqF5/\n1essrSVfT9vWvHYD1St/xtOA1r6mmepdI3aKyH37ebHAzs9dQfU/u54X71vxSnuf0784RNtGvI1U\nR5qnkR34xX1UP3bcLrj5o5v/jLa95qXfpvpECX/E6iM8rSkdswsAVjXYqXUAkAgoAFgd5/pbvvVq\nS7vxxs/TtruffILqoSr+zI4WeN9WVdiFRcNxfi9nynm64HxoBCaEcBYFMCGEsyiACSGcRQFMCOEs\nCmBCCGdZEheyop27XwOHuOP0oydsF+XCGu6s1K0J2itf+iz6Iu7y4XZbOjjKC/3lozzuZ8MB74OC\nveRWLsVdyL4MdzhTx0b4tgN4Zdou6pcr5cfXvHsV1bs8vjxXOsb7pfLwQUtrrT5A2/KyjUB79Yuo\n3vBIl6Xd28QL/b1kgl/7XYe585ers4vuAUA8bO8ziLPbeUG/bCUv3leT48uwZbM5SxsLSAXsjvCl\nA0MZXqCR0de7l+r7R/m5N+f581NRw4s/libsfqnekKBtx/oDUx4D0QhMCOEsCmBCCGdRABNCOIsC\nmBDCWRTAhBDOsiQu5MZX8ly7o/dyV+hIeY+lPdBjuzMAsIUbSEgGLC21uoXn8TG29g5RPVrCXZSR\nCe4sTUbs98Tk5CHaNjHJ8yl7xux8yvmo3PSUpXXszNC2pf12WwCobuUu5KrbeK7h5IvtnMKy2/g1\nfpiqQOfQJ6leftzOeS1v5m7bwbJBqndt58t2tW0cpvqymL39W2lLIHyQu8TLwV2+RJwfy6GWZZaW\nT/NxRnWB5/uGB1NUZxwf5H04OGg/gwAQifLrWdvI8zVPa7XzG5MV3D3eluJLuc2HRmBCCGdRABNC\nOIsCmBDCWRTAhBDOogAmhHCWJXEh29Zw5+/IgSzVh3fazs1g4hHaNhzhbkl9ijsdseULX6Iysdx2\nhAAg1NRK9aoJ7v4kCnbeYyZ1lLatHOUO2u4di7tUN7zsZZa2Lckrj5a+gufx9U3xnMdDBX7dktPv\ns7T4RX/PD/AuLp9Vt47qezts1+6s/fz67I7spPr5r+Ju+JrDx6l+y1P/SXVG1UGe3TlcG5B/SfJj\nASDXZTvcE5W8v/PlPJ+2OcS3zTjexXMeR7t4Dmu8dBXX05NUT5Bnf1kTz3fdh+1Unw+NwIQQzqIA\nJoRwFgUwIYSzKIAJIZxlSSbxz3zxBVQ/Os4nPvcdtycQC3t5YbiDHTwVIpWxl6cCgFMWkUq0u5zv\ns74Qp3qoik+qDk/a3ZwqWU/bTkR5ylC+nRc6DOI7Uzdb2ot2dtC2nXneh/uP8tSOPZ18Yhq1P7Gk\n/7qX90kQsWV8GTZv968trT/MJ4ObzGaqp8fupPoPqrlZcf7L7aKQX/v2PbRtMsZz1wrgqWHVWd6H\nPctts2J1SUDhwlKul9fxSX9GHDyNqhDh24jEuMmUjPL0umpSdLK8muf/RQt8ubX50AhMCOEsCmBC\nCGdRABNCOIsCmBDCWRTAhBDOsiQuZKaeuwuv6OBLMR0tsVNE7un5AW3beKyd6r3NvBjffZ3Lqc74\n1h33Uz1dy4vRTfT0U3140nZiIjFeAK6xjBdunEwt3FkCgF2fs5cWO9rwBG1bt/0cqh8+dIjqvcmX\nUn3gh3dbWmP0DbTtbnyX6i0P8OKKnROrLG1VgTt5o7XfoHrFCHdbLz6Tpxjt+ikvRshoOsCLRRbW\n7aJ6VZg/E4077MKN1c081SkT4fd+tI/fQ4xQHU87qujiKXfJMe42xhoDlokbtZ+JQiV3t0vS/PmZ\nD43AhBDOogAmhHAWBTAhhLMogAkhnEUBTAjhLEviQsYD8qpim15H9VOvsN2y4/U81yyZ4XlVw4kJ\nqucnDlOdMY48/yDFHad+8GPJxOzcyUiSuzzpBHdowkmefxnEuefYzlr3Hato24OveYjqA6M8p3DT\nKHeidr/tU5a2pZ731S+vpzKmu3iRwoaa71la93buYmcu5oXx9nddRfVtN3O3Mbr6fKL+F207ErFd\nXwAY56mDGAsodBjN2bmgTeT+AYA9Uf74to4E3LeEZJTn+1a2cH356jVUj0S4q56esvulb5C7pI3l\ni7vHAY3AhBAOowAmhHAWBTAhhLMogAkhnEUBTAjhLKFCYeHLjD3tnYRCz/5OhBDPSwqFQijoM43A\nhBDOogAmhHAWBTAhhLMogAkhnEUBTAjhLEuSC/k3o1upXjjA8xJz2Z9aWmcLTyrbuI+v//jkeft4\n+9vvofpHL7O1d2/lazf2j6SoPjrC8/6iJHdyvMDfHcsr+TqKle18DcAb1vO8vz1fe7+l7cseom37\nYuNUnxzhawYi2kblbMHOV61o5Tl1V7/lq1T/3E/fTfWj3fb1b+zheaPZ5TxXsyKggmtmnF/PivV2\npdoPnv8h2vaLb/0E1WPreL5m+RS//qsPj1ja6Lln07aXxbuo3jdaT/WmD19iaTf/yato24M5fk8c\n2b+S6gNtPPfYG7Arzw518tzbh6oWP57SCEwI4SwKYEIIZ1EAE0I4iwKYEMJZlmQS/9TITVQ/UsPb\nj5LlvKru5wXj9u+xlywDgKrSAaoPb34J3ykesJSOtkre9ElekC2fC8h4mJq2pJIwLzpXU8sLN3bk\n+OQpwCfxh87eZmnr7uST2A2xMao/mORL002v7qZ6IWqbHl0JbrIEUXaUv1Ob+u2imHnw6xBLDVG9\nJM0n68uyvBhf6aMHqc7YvZv31bEdR6l+cdDSYvvtpcWqx/k2dlRwgyR7hC97x+ip4/dbfoCbSTXt\nD1N9ooW3H2yxr+exDvt5AIBL+lTQUAjxAkIBTAjhLApgQghnUQATQjiLApgQwlmWxIXcOLiJ6vnD\no1Q/mLP1yFPcEWyo2kX1ijv4Um4r2hbuilXG7DQIAFi2gh93d19AKlHadl0SNVHaNlnBnZh4LXdh\ng8h02+k0h8/h76t0N78NwlFuE8fiLVRPhFZbWtnQ4lzI0hF7WTEAaJw8ZGnRaZ6mk01OUj2c5o5b\nT7+9bQCINfHryYiGec3O6SruNm4v8PPsKLWX5gtn+XJ9+wJc7zNbbScziOp2vu1IZIrqgzmeXpZv\nsJfxA4BCid2HzfX8uqWf5M/sfGgEJoRwFgUwIYSzKIAJIZxFAUwI4SwKYEIIZ1kSF7I3wR2aRIzn\npg1utfWhWrvQGwBk9y6nenktd5CSqVdTHbjL3kYZj+9JXi8PSfAcr4G0nbO3Js4dvtUV/JKsIe7U\nfAzW2e2TQS5ciLtZA+BF7dqO8vzTwUZ7+yOJhTt5AFDfz/MYh2rtvL+qJp4LORXjuY1Nu/j5l67l\nhQExHnChCYUdPEewcSV33MpSPBd2sMvu89Iyfu3LBnmOpFndTHVGNs4LhU61cycX+7h73nT8V1Qf\nidn3Shmqadv8Ofz6zIdGYEIIZ1EAE0I4iwKYEMJZFMCEEM6iACaEcJYlcSHba3keY1c5d3/WrbXz\nsNbsWEvbdi/nuZDlE9ydrGnspTqj0M9zHuOj3KEJFbjbirTdfizFl6FKTvDjy5Qv3FkCgFTyxfa2\n67mDVB/eQ/XqgPy2THYF1VdE19jbLvCcuiDiVdyhao7Zrl19kucZrjgYpvqBDt7nzXu5q9pfw5Yn\nsyv3AkDvOdz5PGh4ft/Ly3h13P0riZ58irZd0d/B91n5KNXpNlbb+asAMLz3SaqPxnmfZ8K8z0sm\nbGexwFd9Q3t8cfc4oBGYEMJhFMCEEM6iACaEcBYFMCGEsyiACSGcZUlcyMGRJ6g+dIRXjpyctJ2Y\nvk2P07YVx/gahVWNPC8xn+bOImPfUZ5/Wcjx/L7SFM8ra6+yK7smwR3B6DjfdllHwCKaARwrPWxp\nA2s6advJPu78oZNXU13V1kZ1VmN0uoyfZxCRcn6M6WnbzTrreA9tW2jlbmPXGHcK72/5NdUvSlxK\ndUbnNp432XI2d2GfHOMVWWtGbTevJ83d7dtD/N7fmA5Yz5SwvLyd6j3N/DoMldjrjQJA915eSXhV\nq53Dmt8dUAH4Ev7MzodGYEIIZ1EAE0I4iwKYEMJZFMCEEM6yJJP4yUo+qbhh0xjV12QOWlpXgRc7\ny5fxye26dVyPJBc+Gd7Vw9M9ohO8kF5olE9Cjmft7bRX8cntzgyfDE7styfl5+PgMtuAqBpYRdu2\nNHBjoyK+jOrHS3mhw6l++5yGxu1J3Plo3cRvyenjdp/3NvKJ4/2HuflQ3cuXBDsvupHqmYDtM1pW\n8ntiRUXAEnyDfPI8EttuadnKBtq2Mcmvw0DNwpdVi23hBsGmbp6KF9rhUX1ZiBtYMdgpYKN13Ngo\nOzRAddhZcb9BIzAhhLMogAkhnEUBTAjhLApgQghnUQATQjhLqBBUhO9k7iQUevZ3IoR4XlIoFPi6\nf9AITAjhMApgQghnUQATQjiLApgQwlkUwIQQzrIkuZBnfeiLVK+ttgv9AUAybOuxMI+1BfACgPkC\nz2OcGOCF2u78+89Y2nc73kfbNrYFmCLhGNdD9rGk+ngeW2YwRfUB8Fy79xz+T6pfv/YfLK2snRf6\nyw7yvkqQ5eAAoLSUX4uROjsoBZyYAAAP9ElEQVTvMdbHi0Je/fDfUf1LHVdS/cHX2Dmike4badv1\nL34r1adW8vW8VjzxK6oPDV9hadd85eO0beHt76X6Xcf4sn/7m/m1CB2y80/rVvD7qj7CC0ueuvLl\nVK/7zO9b2kfe8+e07XiI5+pWlfA8y3DNKqpHyu281OHjvE/i+Saqz4dGYEIIZ1EAE0I4iwKYEMJZ\nFMCEEM6iACaEcJYlcSGfPHqA6rmjvFpnedZ2FgsBLlyQ2xiLJak+MbrwZdUuqOLbbmrgy5CNlXO9\nPmKfT3crdzJjh/kleXz6KNURUKi1Nm+7RY1p/r6KglfTzIe4g1hZwpcn65yw3bLaqYVXBwWAwnnc\ncVsRts9/c/k62vaRx2/n22jkpT035HiV3oGmH1GdMbicX89kCXfWVmR3UL1zpX0tJkd5n/St4ff4\n1DL+vDHaTuHX8uiBfVTfly6lesfgcaoneuztDNfz1OiNSb7P+dAITAjhLApgQghnUQATQjiLApgQ\nwlmWZBI/PR6QqlLgy5Dlcj2WNpHmE5nhPE+9ySXCXE8vfKmsR4/vp3pzZAv/g+QDVD48ai8rd7y8\ni7ZNjNnLUAHAUH9AmlIA1SnbrEh08vdVSZTvMzMVsPxVjqcY1YTsPk/kFnfcoVP5pPfkaXbazMEj\n3bRtxZH7qX5ahqfePLWRL9lXSd/vv6Ztu1r5cmP9mUeofriaL6vW8ZS91GDlmS+ibRNVPBWv/jRu\nbjAu7ODmw01pnkpUVsXv2+n7eSgZqbef8VLweNAfcF/Nh0ZgQghnUQATQjiLApgQwlkUwIQQzqIA\nJoRwliVxIVvrG6ieTQ1QPZS2i7olk9y5iEftgmkAEIsErOQW4mkjzG/si9ruIQD0jfdSPZxYTvWq\nOtvRSWfsAn0AkA0oijhRFpBKFEDZsJ1OUp3n5zNdyd3GcIntiAFAdJK/93JltuM03ccdziC6Bnih\nv7Y7bb07M0TbJirs+wcAtnbzvj39jN1U7y19CdUZteu5Gx7dx532yvE+qu+vt9O3SiZ5+s760Bqq\n7xvh7ixtW8+dzNPX8NAQ3cPPc3s1vxZl0/Z1S4/yXwKMt/LipPOhEZgQwlkUwIQQzqIAJoRwFgUw\nIYSzKIAJIZxlSVzI1y0LyHmMcHeyNGIfVhX4NkpKs1SfmOKOU0mG618g2tEMd+c6j/Al0bI9PJcr\nlLPdv0g5z0GbKPACc6URXvwxiMaYvZ3qMu7YVmOY6gPTfJ9tMe4eV2dsx7GnuZEfIDfhsC/0ENWf\n2Gg7V6u3cudr1xh3eC8541Gq/9exc6l+bnwb1RnhPHfzpkv5I5YNWJ6sa8J2yVs38ns81Mxd5drW\ntVRnnNLBHdvDIf6c1PXzvi1030n1CGwHdaiWX/yGiVaqz4dGYEIIZ1EAE0I4iwKYEMJZFMCEEM6i\nACaEcJYlcSE/eOWZVI+HuKNRX2G7X9E4rxAZy3Pnb3giIK+Km3/4wudt7WApd9D2DO+h+lie5/2V\nDNt5nNEIbzud40tlJeq54xRE54Sdxxgu4e+ryXxAlc08X8puOM7zSbMF282cqOAOWhCZl/L8vvwt\n9rEMhvlSXqMez6c8tpOfT+UauwIwAOx/4yZbvOoW2naklefBdq/m163nCL8RR/fauYbxdby6cFeI\nPxONG6hMGc/y3MbqWv5crdrIc5Jbu/m9lcnY9+F4P18LcLCKx4P50AhMCOEsCmBCCGdRABNCOIsC\nmBDCWRTAhBDOsiQu5NTWY1SfCHEnLl9l573FAhy0fIi7OdM5XpE1EeOODmPl6y+g+vIuvgbgcA3v\nzolpu8pmMtJM207lec5nusDdyW17v0v1+mk7l602xfu7r5KvxRgp5301nuTXIlxSb2ktMb5tHLiV\nyheM8ZzC3kvsKrjHMito21f0cXdupIO7yqfV88qzmLqCiH9Nmx4bsa8xADzQz/XJQzyfdueI7XCv\nHuc5qdMJ7iA29QZUIyYcSXC3cXkdXyvTa+bn05Pma24eN3bebCbP832zsYUf9wwagQkhnEUBTAjh\nLApgQghnUQATQjhLqFBY/MTZoncSCj37OxFCPC8pFAoBCYAagQkhHEYBTAjhLApgQghnUQATQjiL\nApgQwlmWJJXomrfdS/Wh1CjV02N2YbwoSccBgFiMGxS5cp420hHnp/yBm95gaRs+cD9t++If76b6\n4XPtJaQAYGq03dLq6nm6S/X6X1B9xaSdXgUAn//r/031r37rXZb20K+20ra15TxtpGUFT3dau4EX\nHQyF7D6fauBpMFed/Vaq3/WB/VQf711ti7t4IcJ9dtYRAGAkz9/XAxG+rFy20y6M+E1soW2/Hz2P\n6tWNvG87JwJSxkJ2WlM8w+/xeJSnekVL+H142cAdlnbJjz9L2w7388KF4fGg55CnuqVzdh96tbxt\naYwv5TYfGoEJIZxFAUwI4SwKYEIIZ1EAE0I4iwKYEMJZlsSFbB3jbmMmNUT18pF+S8vneTpltDqg\n0GGOuyglSV7Uj5F6vJvqB7jxh7p+XhwuNWgXdatYy5cby2ZaqL4nv7glp/JHbLdobIj3dwk/bCyv\nX0n1eHU11avb7fbjXQvvbwBoXMGL3UVLjlhaH7ibNdbEr32mi9/u2TG+DFshQtoHrBLX1syPe/UG\n7uS2g1/P6ohdpLCigp/ndCagsOQUP3/8xJYuu/gi2jQ3xV3y8ghfmq6irILq0ym7b2vyPB4M9PFl\n8uZDIzAhhLMogAkhnEUBTAjhLApgQghnUQATQjjLkriQ4YEnqd6S4Q5VbsROZouWcqssdJTnmkWW\ncQexcoi3ZxxqOo3qnU/xfLDpptOpHjtlh6VNVPM8vtp7eSJf/xruTgZxrN92Pof6+HGjlt8GzIQD\ngJZK7kLWVNrH2J3jOX9BVJZso/pwxXpLi5c9Rdu2THOrsG8VdwRrC1NUP9w6aIu/pk3RM1VF9bJp\nnguaqubLx5XmbDevJ82fk+YxnjvYOx3gQhKO9HdSPR7l25hK8fMcz3IHMUQc+KFJ/izv2GY/JwDw\n5jaeNwtoBCaEcBgFMCGEsyiACSGcRQFMCOEsCmBCCGdZEheytoQ7GoVpnoM2HrddoYo0d5byddz9\nSE5yt7GuhrsujPp6nn9Z6VVSvbDnANXjrbb718lNSLwk4HyWDXLXajvfDLITttMTmeIOZzTHK3iO\nJ+3qoABQ2lhD9aayektLDdl5rfORqeUO1fKSw5Y2YbjDF27kfVjTx7fdmeD3Sv0gdy0Zpp/37fGj\n/L6NTDZR/cmo7XwmRrgDne7n5zk9TNzTAO648Raq50u52zgxzu/xyCAfC2XT9vPWWMafn86unVT/\nylu/TnVAIzAhhMMogAkhnEUBTAjhLApgQghnWZJJ/PIRPvGHZEB6ULd9WGUZXoyvLMyXG0OcGwf1\n63hxOMa6U/hyViNr+D6jST6l3l+ywdIaSvjEcbSPb+Pe0xb3runJ2ZPH+QIvUocsNyvKBnnRvbEB\nvpxXrjFjaUNDAdUSA+ia4vssWW67HqmAjJnqHn4+/RvsoogA0NLLJ8kTm0ga1AN8n+OrllN9MssL\nAA4N8aXc+sbsvp2O2gYGANTnuYlRGln4Pd4XcBxTAcuq9R/hx4IQ7/O2cdsISqzkz8+qsla+7XnQ\nCEwI4SwKYEIIZ1EAE0I4iwKYEMJZFMCEEM6yNMuq7XyE6qksL9QWD9lOR7KGO1/5vbxgXqSOF90b\nf4Cn5NC2w3YxNgBo3M5dnoNlZ1I9NGSnTGVj/LiPXsTTQ955H5XxKS6jotx286rK+dJXdSt5alCo\ngrtFPQGpKvHhfZaWSi68uB4AtEzylJwsbDezorCMtj3WyF3v9aU8ZaovcZTquYGFF7+cONOj+ugY\nv4fGO3mK0WST7eSOldgpWgCQjnHHtn6ap+rgl7Z0yXmX0KbhJE/zi2AN1Sen+PmsnraXUKuq40vQ\nxcBd//nQCEwI4SwKYEIIZ1EAE0I4iwKYEMJZFMCEEM6yJC5k/Yp1fOfN3IUcHbJdlGQpd7OmY/wU\nknHu3NRVbaI6tl1vSbuHuNtWesZGvs8sfx9kYg2WNjjKj3t1BS8ktzO8uOXJSkmBvVAzd2YTGe5C\nlga4Qv3dvBpjBUnNm+KpgIHEVnH3a3XG7sPR07mrurbXbgsAw8k2ql8YsGxZ3xbill1Hm6J2NXe3\nS8p5vmJVKT/GsrC9nXBAvm82F7DtcdvJBEBdyI4V3N2vaeROYXWMO5zVSe7YLsvbBS1LpnjeZKqH\nX4f50AhMCOEsCmBCCGdRABNCOIsCmBDCWRTAhBDOEioUuCNwUncSCijXKIQQJ6BQKAQmSWoEJoRw\nFgUwIYSzKIAJIZxFAUwI4SxLkkq0tevDVO+Pj1B9fOwpW+vmBdOy4EXt4iuaqZ7o5qkql5/xr5b2\n9n+6krZtruKF8UajPN2ndMxeziyV4Tk2m5fzlIy6Bt7+8jP/kepCvBDQCEwI4SwKYEIIZ1EAE0I4\niwKYEMJZFMCEEM6yJC5kU5LHyVSSO4hdx2OWli/ny23le7uoXpiwnT8AmBribibjot9/E9Wj9bx4\nXTo9RfVwmb0MW2aCL7dVF+cF5mKTfNtCvJDRCEwI4SwKYEIIZ1EAE0I4iwKYEMJZFMCEEM6yJC7k\nwepjVB8+wpd/yhw6bGnhPF9yqTvFl39K9Biq9ybPpjrj1oe5U1gfS1G9a5g7ovkK24VMD4zTtjVh\nnmc5ldhPdSFeyGgEJoRwFgUwIYSzKIAJIZxFAUwI4SwKYEIIZ1kSF3LXw9yFPJyapPrIUI+lJab5\noTbGu6m+rXol1esTB6jOuPcxuzIsAFSuq6J6tJtXZN2XsLWVI/zcc43c4Yz27aC6EC9kNAITQjiL\nApgQwlkUwIQQzqIAJoRwFgUwIYSzLE0uZI6vaVg5bLuNAFAasyuyHpzksXYoHOLbPshdvupT2qnO\nqD/9DVRPetVUn+7kbus5qTFLG5jilWErkjwX8vjx06gOPBCgC/H8RyMwIYSzKIAJIZxFAUwI4SwK\nYEIIZ1mSSfzBCj5hnRzm7cO9drrPoXgjbbs54lF9z6v58mTJJw/ynRIqVm+g+rrmJqrn8yv4hhK2\n0dBWwgsuZkZbqd5SxtOUfsz3KMQLAo3AhBDOogAmhHAWBTAhhLMogAkhnEUBTAjhLEviQl5aztNj\nttfay40BwO4+282rmOaF/kqa+XJr8YcKVB9vPIvqwK8tZXiXvbwbAByJ8uXgBnqnqD6RtosulofK\naNuKCE9HiozxvhLihYxGYEIIZ1EAE0I4iwKYEMJZFMCEEM6iACaEcJZQocDdOiGEeK6jEZgQwlkU\nwIQQzqIAJoRwFgUwIYSzKIAJIZxFAUwI4SwKYEIIZ1EAE0I4iwKYEMJZFMCEEM6iACaEcBYFMCGE\nsyiACSGcRQFMCOEsCmBCCGdRABNCOIsCmBDCWRTAhBDOogAmhHAWBTAhhLMogAkhnEUBTAjhLApg\nQghn+f+sUrS+aM1RhQAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0110d3a8d0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0110db4250>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0110f01910>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0113ede810>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "eUxL0Sgb3ewx",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "**2. Accuracy according to different reg. (learning rate = 1e-3, update rule = 'adam')**"
      ]
    },
    {
      "metadata": {
        "id": "f4zZKPxq3rkm",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 2184
        },
        "outputId": "61733384-61d0-4acc-a877-77381fe411ce"
      },
      "cell_type": "code",
      "source": [
        "regs = [0.5, 0.1, 0.05, 0.01, 0.005, 0.001, 0.0005]\n",
        "\n",
        "for reg in regs:\n",
        "    model = ThreeLayerConvNet(reg=reg)\n",
        "\n",
        "    solver = Solver(model, data,\n",
        "                    num_epochs=1, batch_size=200,\n",
        "                    update_rule='adam',\n",
        "                    optim_config={\n",
        "                      'learning_rate': 1e-3,\n",
        "                    },\n",
        "                    verbose=True, print_every=20)\n",
        "    solver.train()\n",
        "\n",
        "    plt.plot(solver.val_acc_history, '-o')\n",
        "\n",
        "\n",
        "plt.legend(['val (reg = 0.5)', 'val (reg = 0.1)', 'val (reg = 0.05)', 'val (reg = 0.01)', 'val (reg = 0.005)', 'val (reg = 0.001)', 'val (reg = 0.0005)'], loc='upper left')\n",
        "plt.title('Accuracy vs Regularization', fontsize=20)\n",
        "plt.xlabel('iteration')\n",
        "plt.ylabel('accuracy')\n",
        "plt.show()"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.108000; val_acc: 0.098000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.300000; val_acc: 0.298000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.329000; val_acc: 0.311000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.382000; val_acc: 0.390000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.409000; val_acc: 0.388000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.326000; val_acc: 0.364000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.437000; val_acc: 0.427000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.456000; val_acc: 0.427000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.393000; val_acc: 0.410000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.421000; val_acc: 0.440000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.367000; val_acc: 0.374000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.428000; val_acc: 0.450000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.473000; val_acc: 0.466000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.457000; val_acc: 0.481000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.084000; val_acc: 0.087000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.291000; val_acc: 0.299000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.361000; val_acc: 0.356000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.396000; val_acc: 0.397000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.410000; val_acc: 0.409000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.429000; val_acc: 0.448000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.462000; val_acc: 0.486000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.453000; val_acc: 0.464000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.477000; val_acc: 0.471000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.439000; val_acc: 0.451000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.505000; val_acc: 0.483000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.472000; val_acc: 0.481000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.458000; val_acc: 0.491000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.480000; val_acc: 0.455000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.095000; val_acc: 0.113000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.309000; val_acc: 0.337000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.336000; val_acc: 0.348000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.439000; val_acc: 0.446000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.447000; val_acc: 0.446000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.473000; val_acc: 0.466000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.477000; val_acc: 0.450000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.471000; val_acc: 0.459000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.484000; val_acc: 0.468000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.497000; val_acc: 0.489000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.515000; val_acc: 0.487000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.515000; val_acc: 0.497000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.480000; val_acc: 0.507000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.477000; val_acc: 0.453000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.135000; val_acc: 0.151000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.342000; val_acc: 0.355000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.387000; val_acc: 0.390000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.459000; val_acc: 0.458000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.485000; val_acc: 0.476000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.489000; val_acc: 0.468000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.486000; val_acc: 0.494000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.510000; val_acc: 0.488000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.488000; val_acc: 0.500000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.469000; val_acc: 0.501000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.513000; val_acc: 0.498000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.510000; val_acc: 0.499000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.549000; val_acc: 0.533000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.535000; val_acc: 0.535000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.103000; val_acc: 0.105000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.353000; val_acc: 0.333000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.389000; val_acc: 0.399000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.424000; val_acc: 0.455000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.433000; val_acc: 0.429000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.463000; val_acc: 0.469000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.453000; val_acc: 0.446000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.454000; val_acc: 0.467000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.469000; val_acc: 0.480000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.477000; val_acc: 0.509000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.517000; val_acc: 0.519000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.515000; val_acc: 0.512000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.545000; val_acc: 0.514000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.507000; val_acc: 0.510000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.099000; val_acc: 0.081000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.332000; val_acc: 0.331000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.407000; val_acc: 0.426000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.422000; val_acc: 0.426000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.455000; val_acc: 0.454000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.453000; val_acc: 0.457000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.446000; val_acc: 0.443000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.499000; val_acc: 0.478000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.487000; val_acc: 0.492000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.493000; val_acc: 0.492000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.488000; val_acc: 0.493000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.507000; val_acc: 0.486000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.493000; val_acc: 0.490000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.485000; val_acc: 0.487000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.096000; val_acc: 0.105000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.303000; val_acc: 0.303000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.373000; val_acc: 0.399000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.436000; val_acc: 0.400000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.446000; val_acc: 0.439000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.463000; val_acc: 0.450000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.461000; val_acc: 0.481000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.418000; val_acc: 0.448000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.450000; val_acc: 0.472000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.487000; val_acc: 0.472000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.465000; val_acc: 0.490000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.488000; val_acc: 0.495000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.528000; val_acc: 0.528000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.516000; val_acc: 0.505000\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f0110ca7e10>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "VDgXv6r03scb",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "**3. Accuracy according to different update rule. (learning rate =1e-3 , reg = 0.001)**"
      ]
    },
    {
      "metadata": {
        "id": "pl48VI256YHi",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1470
        },
        "outputId": "dabcc499-96a8-4204-9e8a-2b424a63729f"
      },
      "cell_type": "code",
      "source": [
        "update_rules = ['sgd', 'sgd_momentum', 'rmsprop', 'adam']\n",
        "\n",
        "for update_rule in update_rules:\n",
        "    model = ThreeLayerConvNet(reg=0.001)\n",
        "\n",
        "    solver = Solver(model, data,\n",
        "                    num_epochs=1, batch_size=200,\n",
        "                    update_rule=update_rule,\n",
        "                    optim_config={\n",
        "                      'learning_rate': 1e-3,\n",
        "                    },\n",
        "                    verbose=True, print_every=20)\n",
        "    solver.train()\n",
        "\n",
        "    plt.plot(solver.val_acc_history, '-o')\n",
        "\n",
        "\n",
        "plt.legend(['val (sgd)', 'val (sgd_momentum)', 'val (rmsprop)', 'val (adam)'], loc='upper left')\n",
        "plt.xlabel('iteration')\n",
        "plt.ylabel('accuracy')\n",
        "plt.title('Accuracy vs Update rule', fontsize=20)\n",
        "plt.show()"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.099000; val_acc: 0.102000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.118000; val_acc: 0.113000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.124000; val_acc: 0.130000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.128000; val_acc: 0.153000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.146000; val_acc: 0.160000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.166000; val_acc: 0.155000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.156000; val_acc: 0.162000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.158000; val_acc: 0.168000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.168000; val_acc: 0.171000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.178000; val_acc: 0.169000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.149000; val_acc: 0.167000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.170000; val_acc: 0.176000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.174000; val_acc: 0.183000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.178000; val_acc: 0.187000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.073000; val_acc: 0.086000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.157000; val_acc: 0.155000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.131000; val_acc: 0.156000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.201000; val_acc: 0.205000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.172000; val_acc: 0.164000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.217000; val_acc: 0.243000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.288000; val_acc: 0.312000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.332000; val_acc: 0.338000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.364000; val_acc: 0.363000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.398000; val_acc: 0.405000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.412000; val_acc: 0.427000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.439000; val_acc: 0.441000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.454000; val_acc: 0.462000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.456000; val_acc: 0.473000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.097000; val_acc: 0.113000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.147000; val_acc: 0.140000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.171000; val_acc: 0.184000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.236000; val_acc: 0.248000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.234000; val_acc: 0.249000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.253000; val_acc: 0.287000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.329000; val_acc: 0.339000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.314000; val_acc: 0.321000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.333000; val_acc: 0.321000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.290000; val_acc: 0.300000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.357000; val_acc: 0.415000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.368000; val_acc: 0.378000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.418000; val_acc: 0.405000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.282000; val_acc: 0.285000\n",
            "(Epoch 0 / 1, iteration 1 / 245) train acc: 0.125000; val_acc: 0.124000\n",
            "(Epoch 0 / 1, iteration 21 / 245) train acc: 0.278000; val_acc: 0.327000\n",
            "(Epoch 0 / 1, iteration 41 / 245) train acc: 0.362000; val_acc: 0.368000\n",
            "(Epoch 0 / 1, iteration 61 / 245) train acc: 0.414000; val_acc: 0.419000\n",
            "(Epoch 0 / 1, iteration 81 / 245) train acc: 0.434000; val_acc: 0.434000\n",
            "(Epoch 0 / 1, iteration 101 / 245) train acc: 0.433000; val_acc: 0.470000\n",
            "(Epoch 0 / 1, iteration 121 / 245) train acc: 0.422000; val_acc: 0.460000\n",
            "(Epoch 0 / 1, iteration 141 / 245) train acc: 0.462000; val_acc: 0.457000\n",
            "(Epoch 0 / 1, iteration 161 / 245) train acc: 0.489000; val_acc: 0.497000\n",
            "(Epoch 0 / 1, iteration 181 / 245) train acc: 0.532000; val_acc: 0.497000\n",
            "(Epoch 0 / 1, iteration 201 / 245) train acc: 0.499000; val_acc: 0.515000\n",
            "(Epoch 0 / 1, iteration 221 / 245) train acc: 0.519000; val_acc: 0.510000\n",
            "(Epoch 0 / 1, iteration 241 / 245) train acc: 0.510000; val_acc: 0.528000\n",
            "(Epoch 1 / 1, iteration 245 / 245) train acc: 0.500000; val_acc: 0.506000\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n8Uw3RwAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f8331eb6f50>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "ne3oADJFyyQR",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Copyright: This tamplate is original from Stanford cs231n opensource online course. Modification is made by Ruiqi Gao and Yifei Xu. No distribution is permitted."
      ]
    }
  ]
}